{"ast":null,"code":"var _jsxFileName = \"/home/andrew/todo/src/App.js\";\nimport React from \"react\";\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet state = [\"Milk\", \"Wather\", \"Bread\", \"Chese\", \"Cerial\"];\nlet list = //create variable\nstate.map(element => {\n  // call medot map, it return each element massiv state\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"chekbox\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: element\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 15\n  }, this);\n});\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: list\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/andrew/todo/src/App.js"],"names":["React","state","list","map","element","App"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;;AAEA,IAAIC,KAAK,GAAC,CACR,MADQ,EAER,QAFQ,EAGR,OAHQ,EAIR,OAJQ,EAKR,QALQ,CAAV;AAOA,IAAIC,IAAI,GAAG;AACPD,KAAK,CAACE,GAAN,CAAWC,OAAD,IAAW;AAAC;AACpB,sBAAQ;AAAA,4BACN;AAAO,MAAA,IAAI,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA,YADM,eAEN;AAAA,gBAAMA;AAAN;AAAA;AAAA;AAAA;AAAA,YAFM;AAAA;AAAA;AAAA;AAAA;AAAA,UAAR;AAIL,CALG,CADJ;;AAOA,SAASC,GAAT,GAAe;AACb,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,cACGH;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;KANQG,G;AAQT,eAAeA,GAAf","sourcesContent":["import React from \"react\"\nimport './App.css';\n\nlet state=[\n  \"Milk\",\n  \"Wather\",\n  \"Bread\",\n  \"Chese\",\n  \"Cerial\"\n]\nlet list = //create variable\n    state.map((element)=>{// call medot map, it return each element massiv state\n      return  <div>\n        <input type=\"chekbox\"/>\n        <div>{element}</div> {/*// read div teg plus elemnt*/}\n      </div>\n})\nfunction App() {\n  return (\n    <div className=\"App\">\n      {list}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}