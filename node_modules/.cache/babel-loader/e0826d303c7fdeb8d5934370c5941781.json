{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/andrew/my-app/src/component/Message/Message.js\";\nimport React from \"react\";\nimport s from \"./Message.module.css\";\nimport { NavLink } from \"react-router-dom\";\n\nconst Messages = props => {\n  let newMessageElement = /*#__PURE__*/React.createRef();\n  /*...этой ссылки!!! которая ссылаеться на object со свойствой ref!*/\n\n  let addMessage = () => {\n    let text = newMessageElement.current.value;\n    /*берет значение переменной из...*/\n\n    alert(text);\n    /*выводит сообщение алертом*/\n  };\n\n  let dialogsElements = props.friends.map(d => /*#__PURE__*/_jsxDEV(NavLink, {\n    to: d.id,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.itemDialog,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: s.itemDialogAva,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: d.ava,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 50\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: s.itemFriends,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: s.name,\n          children: d.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: s.unread,\n          children: d.unread\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this));\n  let messageElement = props.friends.map(m => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: s.nameItem,\n        children: [m.name, m.time]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: s.messageItem,\n        children: m.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: s.content,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.contact,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Message\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: dialogsElements\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.dialogs,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: s.message,\n        children: messageElement\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: s.messageArea,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          ref: newMessageElement,\n          className: s.input\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addMessage,\n          className: s.button\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 13\n  }, this);\n};\n\n_c = Messages;\nexport default Messages;\n\nvar _c;\n\n$RefreshReg$(_c, \"Messages\");","map":{"version":3,"sources":["/home/andrew/my-app/src/component/Message/Message.js"],"names":["React","s","NavLink","Messages","props","newMessageElement","createRef","addMessage","text","current","value","alert","dialogsElements","friends","map","d","id","itemDialog","itemDialogAva","ava","itemFriends","name","unread","messageElement","m","nameItem","time","messageItem","message","content","contact","dialogs","messageArea","input","button"],"mappings":"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","sourcesContent":["import React from \"react\"\r\nimport s from \"./Message.module.css\"\r\nimport { NavLink} from \"react-router-dom\";\r\n\r\n\r\nconst Messages = (props) => {\r\n\r\n    let newMessageElement = React.createRef();/*...этой ссылки!!! которая ссылаеться на object со свойствой ref!*/\r\n\r\n    let addMessage = () => {\r\n        let text = newMessageElement.current.value;/*берет значение переменной из...*/\r\n        alert(text)/*выводит сообщение алертом*/\r\n    }\r\n\r\n    let dialogsElements = props.friends.map(d =>\r\n        <NavLink to={d.id}>\r\n            <div className={s.itemDialog}>\r\n                <div className={s.itemDialogAva}><img src={d.ava} alt=\"\"/></div>\r\n                <div className={s.itemFriends}>\r\n                    <div className={s.name}>{d.name}</div>\r\n                    <div className={s.unread}>{d.unread}</div>\r\n                </div>\r\n            </div>\r\n        </NavLink>)\r\n\r\n    let messageElement = props.friends.map(m =>\r\n        <div>\r\n            <div>\r\n                <div className={s.nameItem}>{m.name}{m.time}</div>\r\n                <div className={s.messageItem}>{m.message}</div>\r\n            </div>\r\n        </div>)\r\n\r\n    return (\r\n            <div className={s.content}>\r\n                <div className={s.contact}>\r\n                    <h3>Message</h3>\r\n                    <div>{dialogsElements}</div>\r\n                </div>\r\n                <div className={s.dialogs}>\r\n                    {/* <Route path={\"/0\"} component={Dialogs0}/>*/}\r\n                    <div className={s.message}>\r\n                        {messageElement}\r\n                    </div>\r\n                    <div className={s.messageArea}>\r\n                        <input ref={newMessageElement} className={s.input}/>{/* вот на этот обьект*/}\r\n                        <button onClick={addMessage} className={s.button}/>\r\n                        {/*вызывает функции при клике*/}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n    )\r\n}\r\n\r\n\r\nexport default Messages;\r\n\r\n"]},"metadata":{},"sourceType":"module"}